open Bitstring
let decode = function | v -> printf "hello"
let _ =
  let (__pabitstring_data_1001,__pabitstring_original_off_1004,__pabitstring_original_len_1005)
    = v in
  let __pabitstring_off_1002 = __pabitstring_original_off_1004
  and __pabitstring_len_1003 = __pabitstring_original_len_1005 in
  let __pabitstring_off_aligned_1006 = (__pabitstring_off_1002 land 7) = 0 in
  ignore __pabitstring_off_aligned_1006;
  (let __pabitstring_result_1007 = ref None in
   (try
      if __pabitstring_len_1003 >= 1
      then
        (let __pabitstring_val_1010 =
           Bitstring.extract_bit __pabitstring_data_1001
             __pabitstring_off_1002 __pabitstring_len_1003 1 in
         let __pabitstring_off_1002 = __pabitstring_off_1002 + 1
         and __pabitstring_len_1003 = __pabitstring_len_1003 - 1 in
         match __pabitstring_val_1010 with
         | 1 when true ->
             if __pabitstring_len_1003 >= 2
             then
               let __pabitstring_val_1009 =
                 Bitstring.extract_char_unsigned __pabitstring_data_1001
                   __pabitstring_off_1002 __pabitstring_len_1003 2 in
               let __pabitstring_off_1002 = __pabitstring_off_1002 + 2
               and __pabitstring_len_1003 = __pabitstring_len_1003 - 2 in
               (match __pabitstring_val_1009 with
                | 2 when true ->
                    if __pabitstring_len_1003 >= 16
                    then
                      let __pabitstring_val_1008 =
                        Bitstring.extract_int_be_unsigned
                          __pabitstring_data_1001 __pabitstring_off_1002
                          __pabitstring_len_1003 16 in
                      let __pabitstring_off_1002 =
                        __pabitstring_off_1002 + 16
                      and __pabitstring_len_1003 =
                        __pabitstring_len_1003 - 16 in
                      (match __pabitstring_val_1008 with
                       | v when true ->
                           let p =
                             (__pabitstring_data_1001,
                               __pabitstring_off_1002,
                               __pabitstring_len_1003) in
                           let __pabitstring_off_1002 =
                             __pabitstring_off_1002 + __pabitstring_len_1003 in
                           let __pabitstring_len_1003 = 0 in
                           (__pabitstring_result_1007 := (Some (Some p));
                            raise Exit)
                       | _ -> ())
                    else ()
                | _ -> ())
             else ()
         | _ -> ())
      else ();
      if __pabitstring_len_1003 >= 1
      then
        (let __pabitstring_val_1013 =
           Bitstring.extract_bit __pabitstring_data_1001
             __pabitstring_off_1002 __pabitstring_len_1003 1 in
         let __pabitstring_off_1002 = __pabitstring_off_1002 + 1
         and __pabitstring_len_1003 = __pabitstring_len_1003 - 1 in
         match __pabitstring_val_1013 with
         | 0 when true ->
             if __pabitstring_len_1003 >= 2
             then
               let __pabitstring_val_1012 =
                 Bitstring.extract_char_unsigned __pabitstring_data_1001
                   __pabitstring_off_1002 __pabitstring_len_1003 2 in
               let __pabitstring_off_1002 = __pabitstring_off_1002 + 2
               and __pabitstring_len_1003 = __pabitstring_len_1003 - 2 in
               (match __pabitstring_val_1012 with
                | 1 when true ->
                    if __pabitstring_len_1003 >= 16
                    then
                      let __pabitstring_val_1011 =
                        Bitstring.extract_int_be_unsigned
                          __pabitstring_data_1001 __pabitstring_off_1002
                          __pabitstring_len_1003 16 in
                      let __pabitstring_off_1002 =
                        __pabitstring_off_1002 + 16
                      and __pabitstring_len_1003 =
                        __pabitstring_len_1003 - 16 in
                      (match __pabitstring_val_1011 with
                       | v when true ->
                           let p =
                             (__pabitstring_data_1001,
                               __pabitstring_off_1002,
                               __pabitstring_len_1003) in
                           let __pabitstring_off_1002 =
                             __pabitstring_off_1002 + __pabitstring_len_1003 in
                           let __pabitstring_len_1003 = 0 in
                           (__pabitstring_result_1007 := (Some (Some p));
                            raise Exit)
                       | _ -> ())
                    else ()
                | _ -> ())
             else ()
         | _ -> ())
      else ();
      __pabitstring_result_1007 := (Some None);
      raise Exit
    with | Exit  -> ());
   (match !__pabitstring_result_1007 with
    | Some x -> x
    | None  -> raise (Match_failure ("../test.ml", 5, 2))))
File "../test.ml", line 4, characters 2-8:
Error: Unbound value printf
